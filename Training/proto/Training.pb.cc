// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Training.proto

#include "Training.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_Training_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Training_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Position;
}  // namespace protobuf_Training_2eproto
namespace Training {
class PositionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Position>
      _instance;
} _Position_default_instance_;
class TrainDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TrainData>
      _instance;
} _TrainData_default_instance_;
}  // namespace Training
namespace protobuf_Training_2eproto {
static void InitDefaultsPosition() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Training::_Position_default_instance_;
    new (ptr) ::Training::Position();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Training::Position::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Position =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPosition}, {}};

static void InitDefaultsTrainData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Training::_TrainData_default_instance_;
    new (ptr) ::Training::TrainData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Training::TrainData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TrainData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTrainData}, {
      &protobuf_Training_2eproto::scc_info_Position.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Position.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TrainData.base);
}

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Training::Position, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Training::Position, bp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Training::Position, wp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Training::Position, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Training::Position, mover_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Training::Position, result_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Training::TrainData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Training::TrainData, positions_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Training::Position)},
  { 10, -1, sizeof(::Training::TrainData)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::Training::_Position_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Training::_TrainData_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "Training.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016Training.proto\022\010Training\"o\n\010Position\022\n"
      "\n\002BP\030\001 \001(\r\022\n\n\002WP\030\002 \001(\r\022\t\n\001K\030\003 \001(\r\022\036\n\005mov"
      "er\030\004 \001(\0162\017.Training.Color\022 \n\006result\030\005 \001("
      "\0162\020.Training.Result\"2\n\tTrainData\022%\n\tposi"
      "tions\030\001 \003(\0132\022.Training.Position*\035\n\005Color"
      "\022\t\n\005BLACK\020\000\022\t\n\005WHITE\020\001*=\n\006Result\022\010\n\004DRAW"
      "\020\000\022\r\n\tWHITE_WON\020\001\022\r\n\tBLACK_WON\020\002\022\013\n\007UNKN"
      "OWN\020\003b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 293);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Training.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Training_2eproto
namespace Training {
const ::google::protobuf::EnumDescriptor* Color_descriptor() {
  protobuf_Training_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Training_2eproto::file_level_enum_descriptors[0];
}
bool Color_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Result_descriptor() {
  protobuf_Training_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Training_2eproto::file_level_enum_descriptors[1];
}
bool Result_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Position::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Position::kBPFieldNumber;
const int Position::kWPFieldNumber;
const int Position::kKFieldNumber;
const int Position::kMoverFieldNumber;
const int Position::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Position::Position()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Training_2eproto::scc_info_Position.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Training.Position)
}
Position::Position(const Position& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&bp_, &from.bp_,
    static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&bp_)) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:Training.Position)
}

void Position::SharedCtor() {
  ::memset(&bp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&bp_)) + sizeof(result_));
}

Position::~Position() {
  // @@protoc_insertion_point(destructor:Training.Position)
  SharedDtor();
}

void Position::SharedDtor() {
}

void Position::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Position::descriptor() {
  ::protobuf_Training_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Training_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Position& Position::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Training_2eproto::scc_info_Position.base);
  return *internal_default_instance();
}


void Position::Clear() {
// @@protoc_insertion_point(message_clear_start:Training.Position)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&bp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&bp_)) + sizeof(result_));
  _internal_metadata_.Clear();
}

bool Position::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Training.Position)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 BP = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 WP = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &wp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 K = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &k_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Training.Color mover = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_mover(static_cast< ::Training::Color >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Training.Result result = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_result(static_cast< ::Training::Result >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Training.Position)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Training.Position)
  return false;
#undef DO_
}

void Position::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Training.Position)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 BP = 1;
  if (this->bp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->bp(), output);
  }

  // uint32 WP = 2;
  if (this->wp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->wp(), output);
  }

  // uint32 K = 3;
  if (this->k() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->k(), output);
  }

  // .Training.Color mover = 4;
  if (this->mover() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->mover(), output);
  }

  // .Training.Result result = 5;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->result(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Training.Position)
}

::google::protobuf::uint8* Position::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Training.Position)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 BP = 1;
  if (this->bp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->bp(), target);
  }

  // uint32 WP = 2;
  if (this->wp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->wp(), target);
  }

  // uint32 K = 3;
  if (this->k() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->k(), target);
  }

  // .Training.Color mover = 4;
  if (this->mover() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->mover(), target);
  }

  // .Training.Result result = 5;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->result(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Training.Position)
  return target;
}

size_t Position::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Training.Position)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 BP = 1;
  if (this->bp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bp());
  }

  // uint32 WP = 2;
  if (this->wp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->wp());
  }

  // uint32 K = 3;
  if (this->k() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->k());
  }

  // .Training.Color mover = 4;
  if (this->mover() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->mover());
  }

  // .Training.Result result = 5;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Position::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Training.Position)
  GOOGLE_DCHECK_NE(&from, this);
  const Position* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Position>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Training.Position)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Training.Position)
    MergeFrom(*source);
  }
}

void Position::MergeFrom(const Position& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Training.Position)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.bp() != 0) {
    set_bp(from.bp());
  }
  if (from.wp() != 0) {
    set_wp(from.wp());
  }
  if (from.k() != 0) {
    set_k(from.k());
  }
  if (from.mover() != 0) {
    set_mover(from.mover());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void Position::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Training.Position)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Position::CopyFrom(const Position& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Training.Position)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Position::IsInitialized() const {
  return true;
}

void Position::Swap(Position* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Position::InternalSwap(Position* other) {
  using std::swap;
  swap(bp_, other->bp_);
  swap(wp_, other->wp_);
  swap(k_, other->k_);
  swap(mover_, other->mover_);
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Position::GetMetadata() const {
  protobuf_Training_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Training_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TrainData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TrainData::kPositionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TrainData::TrainData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Training_2eproto::scc_info_TrainData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Training.TrainData)
}
TrainData::TrainData(const TrainData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      positions_(from.positions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Training.TrainData)
}

void TrainData::SharedCtor() {
}

TrainData::~TrainData() {
  // @@protoc_insertion_point(destructor:Training.TrainData)
  SharedDtor();
}

void TrainData::SharedDtor() {
}

void TrainData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TrainData::descriptor() {
  ::protobuf_Training_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Training_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TrainData& TrainData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Training_2eproto::scc_info_TrainData.base);
  return *internal_default_instance();
}


void TrainData::Clear() {
// @@protoc_insertion_point(message_clear_start:Training.TrainData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  positions_.Clear();
  _internal_metadata_.Clear();
}

bool TrainData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Training.TrainData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Training.Position positions = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_positions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Training.TrainData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Training.TrainData)
  return false;
#undef DO_
}

void TrainData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Training.TrainData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Training.Position positions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->positions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->positions(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Training.TrainData)
}

::google::protobuf::uint8* TrainData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Training.TrainData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Training.Position positions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->positions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->positions(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Training.TrainData)
  return target;
}

size_t TrainData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Training.TrainData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Training.Position positions = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->positions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->positions(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TrainData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Training.TrainData)
  GOOGLE_DCHECK_NE(&from, this);
  const TrainData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TrainData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Training.TrainData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Training.TrainData)
    MergeFrom(*source);
  }
}

void TrainData::MergeFrom(const TrainData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Training.TrainData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  positions_.MergeFrom(from.positions_);
}

void TrainData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Training.TrainData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrainData::CopyFrom(const TrainData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Training.TrainData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrainData::IsInitialized() const {
  return true;
}

void TrainData::Swap(TrainData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TrainData::InternalSwap(TrainData* other) {
  using std::swap;
  CastToBase(&positions_)->InternalSwap(CastToBase(&other->positions_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TrainData::GetMetadata() const {
  protobuf_Training_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Training_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Training
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Training::Position* Arena::CreateMaybeMessage< ::Training::Position >(Arena* arena) {
  return Arena::CreateInternal< ::Training::Position >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Training::TrainData* Arena::CreateMaybeMessage< ::Training::TrainData >(Arena* arena) {
  return Arena::CreateInternal< ::Training::TrainData >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
