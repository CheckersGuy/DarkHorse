// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Training.proto

#ifndef PROTOBUF_INCLUDED_Training_2eproto
#define PROTOBUF_INCLUDED_Training_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_Training_2eproto 

namespace protobuf_Training_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_Training_2eproto
namespace Training {
class Position;
class PositionDefaultTypeInternal;
extern PositionDefaultTypeInternal _Position_default_instance_;
class TrainData;
class TrainDataDefaultTypeInternal;
extern TrainDataDefaultTypeInternal _TrainData_default_instance_;
}  // namespace Training
namespace google {
namespace protobuf {
template<> ::Training::Position* Arena::CreateMaybeMessage<::Training::Position>(Arena*);
template<> ::Training::TrainData* Arena::CreateMaybeMessage<::Training::TrainData>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace Training {

enum Color {
  BLACK = 0,
  WHITE = 1,
  Color_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Color_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Color_IsValid(int value);
const Color Color_MIN = BLACK;
const Color Color_MAX = WHITE;
const int Color_ARRAYSIZE = Color_MAX + 1;

const ::google::protobuf::EnumDescriptor* Color_descriptor();
inline const ::std::string& Color_Name(Color value) {
  return ::google::protobuf::internal::NameOfEnum(
    Color_descriptor(), value);
}
inline bool Color_Parse(
    const ::std::string& name, Color* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Color>(
    Color_descriptor(), name, value);
}
enum Result {
  DRAW = 0,
  WHITE_WON = 1,
  BLACK_WON = 2,
  UNKNOWN = 3,
  Result_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Result_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Result_IsValid(int value);
const Result Result_MIN = DRAW;
const Result Result_MAX = UNKNOWN;
const int Result_ARRAYSIZE = Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* Result_descriptor();
inline const ::std::string& Result_Name(Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    Result_descriptor(), value);
}
inline bool Result_Parse(
    const ::std::string& name, Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Result>(
    Result_descriptor(), name, value);
}
// ===================================================================

class Position : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Training.Position) */ {
 public:
  Position();
  virtual ~Position();

  Position(const Position& from);

  inline Position& operator=(const Position& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Position(Position&& from) noexcept
    : Position() {
    *this = ::std::move(from);
  }

  inline Position& operator=(Position&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Position& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Position* internal_default_instance() {
    return reinterpret_cast<const Position*>(
               &_Position_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Position* other);
  friend void swap(Position& a, Position& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Position* New() const final {
    return CreateMaybeMessage<Position>(NULL);
  }

  Position* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Position>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Position& from);
  void MergeFrom(const Position& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Position* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 BP = 1;
  void clear_bp();
  static const int kBPFieldNumber = 1;
  ::google::protobuf::uint32 bp() const;
  void set_bp(::google::protobuf::uint32 value);

  // uint32 WP = 2;
  void clear_wp();
  static const int kWPFieldNumber = 2;
  ::google::protobuf::uint32 wp() const;
  void set_wp(::google::protobuf::uint32 value);

  // uint32 K = 3;
  void clear_k();
  static const int kKFieldNumber = 3;
  ::google::protobuf::uint32 k() const;
  void set_k(::google::protobuf::uint32 value);

  // .Training.Color mover = 4;
  void clear_mover();
  static const int kMoverFieldNumber = 4;
  ::Training::Color mover() const;
  void set_mover(::Training::Color value);

  // .Training.Result result = 5;
  void clear_result();
  static const int kResultFieldNumber = 5;
  ::Training::Result result() const;
  void set_result(::Training::Result value);

  // @@protoc_insertion_point(class_scope:Training.Position)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 bp_;
  ::google::protobuf::uint32 wp_;
  ::google::protobuf::uint32 k_;
  int mover_;
  int result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Training_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TrainData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Training.TrainData) */ {
 public:
  TrainData();
  virtual ~TrainData();

  TrainData(const TrainData& from);

  inline TrainData& operator=(const TrainData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TrainData(TrainData&& from) noexcept
    : TrainData() {
    *this = ::std::move(from);
  }

  inline TrainData& operator=(TrainData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TrainData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TrainData* internal_default_instance() {
    return reinterpret_cast<const TrainData*>(
               &_TrainData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(TrainData* other);
  friend void swap(TrainData& a, TrainData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TrainData* New() const final {
    return CreateMaybeMessage<TrainData>(NULL);
  }

  TrainData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TrainData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TrainData& from);
  void MergeFrom(const TrainData& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TrainData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Training.Position positions = 1;
  int positions_size() const;
  void clear_positions();
  static const int kPositionsFieldNumber = 1;
  ::Training::Position* mutable_positions(int index);
  ::google::protobuf::RepeatedPtrField< ::Training::Position >*
      mutable_positions();
  const ::Training::Position& positions(int index) const;
  ::Training::Position* add_positions();
  const ::google::protobuf::RepeatedPtrField< ::Training::Position >&
      positions() const;

  // @@protoc_insertion_point(class_scope:Training.TrainData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Training::Position > positions_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Training_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Position

// uint32 BP = 1;
inline void Position::clear_bp() {
  bp_ = 0u;
}
inline ::google::protobuf::uint32 Position::bp() const {
  // @@protoc_insertion_point(field_get:Training.Position.BP)
  return bp_;
}
inline void Position::set_bp(::google::protobuf::uint32 value) {
  
  bp_ = value;
  // @@protoc_insertion_point(field_set:Training.Position.BP)
}

// uint32 WP = 2;
inline void Position::clear_wp() {
  wp_ = 0u;
}
inline ::google::protobuf::uint32 Position::wp() const {
  // @@protoc_insertion_point(field_get:Training.Position.WP)
  return wp_;
}
inline void Position::set_wp(::google::protobuf::uint32 value) {
  
  wp_ = value;
  // @@protoc_insertion_point(field_set:Training.Position.WP)
}

// uint32 K = 3;
inline void Position::clear_k() {
  k_ = 0u;
}
inline ::google::protobuf::uint32 Position::k() const {
  // @@protoc_insertion_point(field_get:Training.Position.K)
  return k_;
}
inline void Position::set_k(::google::protobuf::uint32 value) {
  
  k_ = value;
  // @@protoc_insertion_point(field_set:Training.Position.K)
}

// .Training.Color mover = 4;
inline void Position::clear_mover() {
  mover_ = 0;
}
inline ::Training::Color Position::mover() const {
  // @@protoc_insertion_point(field_get:Training.Position.mover)
  return static_cast< ::Training::Color >(mover_);
}
inline void Position::set_mover(::Training::Color value) {
  
  mover_ = value;
  // @@protoc_insertion_point(field_set:Training.Position.mover)
}

// .Training.Result result = 5;
inline void Position::clear_result() {
  result_ = 0;
}
inline ::Training::Result Position::result() const {
  // @@protoc_insertion_point(field_get:Training.Position.result)
  return static_cast< ::Training::Result >(result_);
}
inline void Position::set_result(::Training::Result value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:Training.Position.result)
}

// -------------------------------------------------------------------

// TrainData

// repeated .Training.Position positions = 1;
inline int TrainData::positions_size() const {
  return positions_.size();
}
inline void TrainData::clear_positions() {
  positions_.Clear();
}
inline ::Training::Position* TrainData::mutable_positions(int index) {
  // @@protoc_insertion_point(field_mutable:Training.TrainData.positions)
  return positions_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Training::Position >*
TrainData::mutable_positions() {
  // @@protoc_insertion_point(field_mutable_list:Training.TrainData.positions)
  return &positions_;
}
inline const ::Training::Position& TrainData::positions(int index) const {
  // @@protoc_insertion_point(field_get:Training.TrainData.positions)
  return positions_.Get(index);
}
inline ::Training::Position* TrainData::add_positions() {
  // @@protoc_insertion_point(field_add:Training.TrainData.positions)
  return positions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Training::Position >&
TrainData::positions() const {
  // @@protoc_insertion_point(field_list:Training.TrainData.positions)
  return positions_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Training

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Training::Color> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Training::Color>() {
  return ::Training::Color_descriptor();
}
template <> struct is_proto_enum< ::Training::Result> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Training::Result>() {
  return ::Training::Result_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_Training_2eproto
